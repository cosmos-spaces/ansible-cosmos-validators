---
- name: Install from source
  become: false
  when: binary is undefined
  block:
    - name: Clone node repo
      git:
        repo: '{{ repo }}'
        dest: '{{ user_dir }}/src/{{ folder }}'
        version: '{{ node_version }}'
        update: yes
        force: yes
        recursive: no

    - name: Install node
      command: '{{ item }}'
      args:
        chdir: '{{ user_dir }}/src/{{ folder }}'
      with_items:
        - 'make {{ make_cmd }} {{ make_install_params }}'
      environment:
        PATH: '{{ path }}'
        GOPATH: '{{ user_dir }}/go'

- name: set binary install exit condition
  set_fact:
    binary_installed: false

- name: download pre-installed binary
  when: binary is defined
  block:
    - name: Install from binary zipped
      include_tasks: binary_zip.yml
      when: binary_processing == "zip"

    - name: Install from binary tar gz
      include_tasks: binary_targz.yml
      when: binary_processing == "targz"

    - name: Install from binary
      include_tasks: binary_default.yml
      when: binary_processing == "default"

- name: Create new directory
  file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  with_items:
    - '{{ user_dir }}/{{ folder }}/cosmovisor/upgrades/{{ upgrade_folder }}/bin'
  when: upgrade_folder is defined

- name: copy binary file to cosmovisor upgrade folder
  copy:
    src: '{{ user_dir }}/go/bin/{{ daemon }}'
    dest: '{{ user_dir }}/{{ folder }}/cosmovisor/upgrades/{{ upgrade_folder }}/bin'
    remote_src: true
    mode: '0755'
  when: upgrade_folder is defined

- name: validate version
  shell: |
    '{{ user_dir }}/{{ folder }}/cosmovisor/upgrades/{{ upgrade_folder }}/bin/{{ daemon }} version'
  register: daemon_version
  when: upgrade_folder is defined

- name: print version
  debug:
    msg: "Desired version: {{ node_version }}; Installed version: {{ daemon_version }}"
  when: upgrade_folder is defined

- name: copy binary file to cosmovisor genesis folder
  copy:
    src: '{{ user_dir }}/go/bin/{{ daemon }}'
    dest: '{{ user_dir }}/{{ folder }}/cosmovisor/genesis/bin'
    remote_src: true
    mode: '0755'
  when: upgrade_folder is not defined

- name: start cosmovisor service
  become: true
  systemd:
    name: '{{ cosmovisor_service_name }}'
    state: restarted
    daemon_reload: yes
    enabled: yes
  when: upgrade_folder is not defined

- name: Pause for 10 seconds
  pause:
    seconds: 10

- name: Ensure it is running
  uri:
    url: 'http://localhost:{{ custom_port_prefix }}57/abci_info'
    method: GET
    status_code: 200
